#!/usr/bin/env python

import gmpy2

p = gmpy2.mpz(13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084171)
g = gmpy2.mpz(11717829880366207009516117596335367088558084999998952205599979459063929499736583746670572176471460312928594829675428279466566527115212748467589894601965568)
h = gmpy2.mpz(3239475104050450443565264378728065788649097520952449527834792452971981976143292558073856937958553180532878928001494706097394108577585732452307673444020333)
B = gmpy2.mpz(1048576)

gB = gmpy2.powmod(g, B, p)
gBx0 = gmpy2.mpz(1)
gacc = gmpy2.invert(1, p) * h
ginv = gmpy2.invert(g, p)
lhs = dict()

# Build table of h/g^x1 values
for x1 in xrange(0, 1048577):
    lhs[gacc] = x1
    gacc = (gacc * ginv) % p

# Execute meet-in-the-middle attack
for x0 in xrange(0, 1048577):
    if gBx0 in lhs:
        print x0 * 1048576 + lhs[gBx0] 
        break
    gBx0 = (gBx0 * gB) % p
